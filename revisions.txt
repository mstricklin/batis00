
We store both revisions and branches encoded in four fields:

o the object id itself
o the context id
o the start epoch for validity
o the end epoch for validity

1. The object ID is not unique. If an object is revised within the same context,
that record exists twice with the same object ID, but different star/end epochs.

2. Two different objects within two different contexts could have the same objectID,
but different context ids.

3. The start/end epochs are simply a counter, each rev is recorded in the revision
table. The start epoch is the first rev for which that record is valid. The end epoch
is one greater than the last rev for which that record is valid.

4. An end validity of Integer.MAX ((2**31)-1 = 2147483647) indicates that no
expiration has occurred for that object.


A scenario where object=1 context=1 is created at epoch=1 and changed at
 epoch=3:
          objectID  contextID startValidity endValidity <some data>
epoch 1   1         1         1             2147483647  aaa
epoch 3   1         1         1             3           aaa
epoch 3   1         1         3             2147483647  bbb


A scenario where object=1 context=1 is created at epoch=1 and deleted at
 epoch=3:
          objectID  contextID startValidity endValidity <some data>
epoch 1   1         1         1             2147483647  aaa
epoch 3   1         1         1             3           aaa




create table FrameZ (
    id integer GENERATED BY DEFAULT AS SEQUENCE framez_seq,
    branch integer default 0 not null,
    startV integer default 0 not null,
    endV integer default 2147483647 not null,
    s0 varchar(255),
    s1 varchar(255),
    s2 varchar(255),
    primary key (id, branch, startV)
);